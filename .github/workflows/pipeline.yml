name: DevSecOps Pipeline

permissions:
    contents: read
    issues: read
    pull-requests: read  

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'


    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip setuptools
        python3 -m pip install -r requirements.txt
      

    - name: Run Unit Tests with Pytest
      run: |
        pytest > test_report.txt
        cat test_report.txt

    - name: Run GitLeaks (Secret Scanning)
      uses: gitleaks/gitleaks-action@v2
  
    - name: Install Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
        sudo mv bin/trivy /usr/local/bin/


    - name: Build Docker Image
      run: docker build -t devsecops-app .

    - name: Run Trivy Scan on Docker Image
      run: |
        trivy image --severity HIGH,CRITICAL devsecops-app | tee trivy_report.txt

  iac-scan:
    name: Checkov - IaC Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Install Checkov
        run: pip install checkov
    
      - name: Run Checkov scan
        run: checkov -d . || true
            
  sonarqube-scan:
    runs-on: ubuntu-latest          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
              
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
         java-version: '17'
         distribution: 'adopt'
              
      - name: Download SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          mv sonar-scanner-5.0.1.3006-linux sonar-scanner
          echo "$PWD/sonar-scanner/bin" >> $GITHUB_PATH
              
      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=DevSecOpsCapstone \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://192.168.1.80:9000 \
            -Dsonar.token=$SONAR_TOKEN
              